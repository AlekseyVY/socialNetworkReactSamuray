{"version":3,"sources":["components/common/FormControls/FormsControls.js","components/common/FormControls/formControls.module.css","utils/validators/validators.js","components/Login/LoginForm/loginForm.module.css","components/Login/LoginForm/LoginForm.jsx","components/Login/LoginContainer.jsx"],"names":["Input","input","meta","props","hasError","touched","error","className","styles","module","exports","requiredField","value","maxLengthCreator","size","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","validate","type","formError","connect","login","authReducer","password","rememberMe","isAuth","loginThunk","to","formData"],"mappings":"sLAGaA,EAAQ,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC5BC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,sBAAKC,UAAWH,EAAWI,IAAOF,MAAQ,GAA1C,UACE,8BACE,iDAAWL,GAAWE,MAEvBD,EAAKG,SAAWH,EAAKI,OAAS,+BAAOJ,EAAKI,a,oBCTjDG,EAAOC,QAAU,CAAC,MAAQ,8B,iCCC1B,oEAAO,IAAMC,EAAgB,SAACC,GAC5B,IAAIA,EACF,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAU,SAACF,GACzC,GAAIA,EAAMG,OAASD,EAAM,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCP3BL,EAAOC,QAAU,CAAC,UAAY,+B,gHCqCfM,EAJQC,YAAU,CAC/BC,KAAM,SADeD,EA3BL,SAACd,GACjB,OACE,8BACE,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,YAAa,QAASC,KAAM,QAASC,UAAWxB,IAAOyB,SAAU,CAACd,SAE3E,8BACE,cAACU,EAAA,EAAD,CAAOC,YAAa,WAAYC,KAAM,WAAYC,UAAWxB,IAAOyB,SAAU,CAACd,SAEjF,gCACE,cAACU,EAAA,EAAD,CAAOK,KAAM,WAAYJ,YAAa,WAAYC,KAAM,aAAcC,UAAW,UADnF,mBAIErB,EAAMG,MACF,qBAAKC,UAAWC,IAAOmB,UAAvB,SACCxB,EAAMG,QAEP,GAGN,mD,uBCMOsB,uBAVO,SAACzB,GACrB,MAAO,CACL0B,MAAO1B,EAAM2B,YAAYD,MACzBE,SAAU5B,EAAM2B,YAAYC,SAC5BC,WAAY7B,EAAM2B,YAAYE,WAC9BC,OAAQ9B,EAAM2B,YAAYG,UAKU,CACtCC,gBADaN,EA3BO,SAACzB,GAKrB,OAAGA,EAAM8B,OACA,cAAC,IAAD,CAAUE,GAAI,aAIrB,gCACE,uCACA,cAAC,EAAD,CAAgBhB,SAVH,SAACiB,GAChBjC,EAAM+B,WAAWE,EAASP,MAAOO,EAASL,SAAUK,EAASJ","file":"static/js/8.97bd48c5.chunk.js","sourcesContent":["import styles from './formControls.module.css'\r\n\r\n\r\nexport const Input = ({input, meta, props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={hasError ? styles.error : \"\"}>\r\n      <div>\r\n        <input {...input} {...props}/>\r\n      </div>\r\n      {meta.touched && meta.error && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formControls_error__2WBoW\"};","\r\n\r\nexport const requiredField = (value) => {\r\n  if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (size) => (value) => {\r\n  if (value.length > size) return `Max length is ${size} symbols`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formError\":\"loginForm_formError__3Gyqx\"};","import * as React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../../common/FormControls/FormsControls\";\r\nimport {requiredField} from \"../../../utils/validators/validators\";\r\nimport styles from './loginForm.module.css'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field placeholder={'Login'} name={'login'} component={Input} validate={[requiredField]}/>\r\n        </div>\r\n        <div>\r\n          <Field placeholder={'Password'} name={'password'} component={Input} validate={[requiredField]}/>\r\n        </div>\r\n        <div>\r\n          <Field type={'checkbox'} placeholder={'Checkbox'} name={'rememberMe'} component={'input'}/> Remember me.\r\n        </div>\r\n        {\r\n          props.error\r\n            ? <div className={styles.formError}>\r\n              {props.error}\r\n            </div>\r\n            : \"\"\r\n        }\r\n\r\n        <button>Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm;","import * as React from \"react\";\r\nimport LoginReduxForm from \"./LoginForm/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../../Redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst LoginContainer =(props) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.loginThunk(formData.login, formData.password, formData.rememberMe)\r\n  }\r\n  if(props.isAuth){\r\n    return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nlet mapStateToProps = (props) => {\r\n  return {\r\n    login: props.authReducer.login,\r\n    password: props.authReducer.password,\r\n    rememberMe: props.authReducer.rememberMe,\r\n    isAuth: props.authReducer.isAuth\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  loginThunk\r\n})(LoginContainer);"],"sourceRoot":""}